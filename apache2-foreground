#!/bin/bash
set -e

# Note: we don't just use "apache2ctl" here because it itself is just a shell-script wrapper around apache2 which provides extra functionality like "apache2ctl start" for launching apache2 in the background.
# (also, when run as "apache2ctl <apache args>", it does not use "exec", which leaves an undesirable resident shell process)

: "${APACHE_CONFDIR:=/etc/apache2}"
: "${APACHE_ENVVARS:=$APACHE_CONFDIR/envvars}"
if test -f "$APACHE_ENVVARS"; then
	. "$APACHE_ENVVARS"
fi

# Apache gets grumpy about PID files pre-existing
: "${APACHE_PID_FILE:=${APACHE_RUN_DIR:=/var/run/apache2}/apache2.pid}"
rm -f "$APACHE_PID_FILE"

install=/var/www/html/public/install.lock

if [ ! -f  "$install" ]; then
	cd /var/www/html
	php artisan smartwiki:install --dbHost=$DB_HOST --dbName=$DB_DATABASE --dbPort=$DB_PORT --dbUser=$DB_USERNAME --dbPassword=$DB_PASSWORD --account=$ACCOUNT --password=$PASSWORD --email=$EMAIL
	
	if [ ! -z $APACHE_HOST ]; then
		configFile=/etc/apache2/sites-enabled/${APACHE_HOST}.conf
		if [ ! -f "$configFile" ]; then
			cp /etc/apache2/sites-enabled/apache.template $configFile
			sed -i "s/{HOST}/${APACHE_HOST}/g" $configFile
		fi
	fi
fi


exec apache2 -DFOREGROUND "$@"